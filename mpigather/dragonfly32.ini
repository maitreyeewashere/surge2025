node {
 os {
  stack_size = 1MB
 }
 app1 { 
  exe = ./run
  argv = 
  launch_cmd = aprun -n 32 -N 1
  # apis = [libfabric, pmi:libfabric]
  env {
    SLURM_NPROCS = 1024
  }
 }


nic {
  name = snappr

  # top-level fields (needed by some components)
  mtu = 1024
  credits = 64KB
  bandwidth = 10.0GB/s
  latency = 50ns

  # nested injection block (needed by others)
  injection {
    bandwidth = 10.0GB/s
    latency = 50ns
  }

  send_state {
    group = state
    type = ftq_calendar
    output = ftq
    epoch_length = 1us
  }

  recv_state {
    group = state
    type = ftq_calendar
    output = ftq
    epoch_length = 1us
  }
}


 memory {
  name = snappr
  channel_bandwidth = 7GB/s
  num_channels = 10
  latency = 10ns
 }
 proc {
  ncores = 4
  frequency = 2GHz
 }
 name = simple
}


switch {
 name = snappr
credits = 8KB
 link {
  bandwidth = 10.0GB/s
  latency = 100ns
  credits = 8KB
  xmit_active {
   group = test
   type = accumulator
  }
  xmit_idle {
   group = test
   type = accumulator
  }
  xmit_stall {
   group = test
   type = accumulator
  }
 }
 logp {
  bandwidth = 1GB/s
  out_in_latency = 100ns
  hop_latency = 100ns
 }
}

topology {
  name = dragonfly
  geometry = [2,4]
  h = 2
  inter_group = circulant
  concentration = 16
}

switch {
  router { 
    name = dragonfly_minimal
  }
}
